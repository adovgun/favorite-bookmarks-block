{"version":3,"file":"bookmark/view.js","mappings":";;;;;;;;;AAAA;AACA,aAAa,6BAA6B;AAC1C;AACA;AACA;;;;;;SCJA;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;ACNA;AACA;AACA;AAC6D;AAE7D,MAAM;EAAEE;AAAM,CAAC,GAAGF,+DAAK,CAAC,0BAA0B,EAAE;EAClDE,KAAK,EAAE;IACLC,YAAY,EAAE;EAChB,CAAC;EACDC,OAAO,EAAE;IACPC,MAAM,EAAEA,CAAA,KAAM;MACZ,MAAMC,OAAO,GAAGL,oEAAU,CAAC,CAAC;MAC5BK,OAAO,CAACC,YAAY,GAAG,CAACD,OAAO,CAACC,YAAY;;MAE5C;MACA,IAAIJ,YAAY,GAAGK,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC,IAAI,IAAI;MAC3EN,YAAY,GAAGO,IAAI,CAACC,KAAK,CAACR,YAAY,CAAC;;MAEvC;MACA,IAAIG,OAAO,CAACC,YAAY,IAAI,CAACJ,YAAY,CAACS,QAAQ,CAACN,OAAO,CAACO,MAAM,CAAC,EAAE;QAClEV,YAAY,CAACW,IAAI,CAACR,OAAO,CAACO,MAAM,CAAC;MACnC,CAAC,MAAM,IACL,CAACP,OAAO,CAACC,YAAY,IACrBJ,YAAY,CAACS,QAAQ,CAACN,OAAO,CAACO,MAAM,CAAC,EACrC;QACA,MAAME,KAAK,GAAGZ,YAAY,CAACa,OAAO,CAACV,OAAO,CAACO,MAAM,CAAC;QAClDV,YAAY,CAACc,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC/B;;MAEA;MACAP,YAAY,CAACU,OAAO,CAAC,0BAA0B,EAAER,IAAI,CAACS,SAAS,CAAChB,YAAY,CAAC,CAAC;MAC9ED,KAAK,CAACC,YAAY,GAAGA,YAAY;;MAEjC;MACA,IAAIiB,cAAc,GAAGlB,KAAK,CAACC,YAAY,CAACkB,MAAM;MAC9CnB,KAAK,CAACkB,cAAc,GAAGA,cAAc;MACrCE,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGH,cAAc,CAAC;IAExC;EACF,CAAC;EACDI,SAAS,EAAE;IACTC,IAAI,EAAEA,CAAA,KAAM;MACV,MAAMnB,OAAO,GAAGL,oEAAU,CAAC,CAAC;;MAE5B;MACA,IAAIyB,SAAS,GAAGlB,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC,IAAI,IAAI;MACxEP,KAAK,CAACC,YAAY,GAAGO,IAAI,CAACC,KAAK,CAACe,SAAS,CAAC;MAE1CJ,OAAO,CAACC,GAAG,CAAC,MAAM,EAAErB,KAAK,CAACC,YAAY,CAAC;;MAEvC;MACA,IAAIG,OAAO,CAACO,MAAM,IAAIX,KAAK,CAACC,YAAY,CAACS,QAAQ,CAACN,OAAO,CAACO,MAAM,CAAC,EAAE;QACjEb,+DAAK,CAAC,0BAA0B,CAAC,CAACI,OAAO,CAACC,MAAM,CAAC,CAAC;MACpD;IACF,CAAC;IACDsB,eAAe,EAAEA,CAAA,KAAM;MACrB;MACA,IAAID,SAAS,GAAGlB,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC,IAAI,IAAI;MACxEP,KAAK,CAACC,YAAY,GAAGO,IAAI,CAACC,KAAK,CAACe,SAAS,CAAC;MAE1CJ,OAAO,CAACC,GAAG,CAAC,MAAM,EAAErB,KAAK,CAACC,YAAY,CAAC;;MAEvC;MACA,IAAIiB,cAAc,GAAGlB,KAAK,CAACC,YAAY,CAACkB,MAAM;MAC9CnB,KAAK,CAACkB,cAAc,GAAGA,cAAc;MAErCE,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGH,cAAc,CAAC;MACtCE,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC;IAExB;EACF;AACF,CAAC,CAAC,C","sources":["webpack://favorite-bookmarks-block/external module \"@wordpress/interactivity\"","webpack://favorite-bookmarks-block/webpack/bootstrap","webpack://favorite-bookmarks-block/webpack/runtime/make namespace object","webpack://favorite-bookmarks-block/./src/bookmark/view.js"],"sourcesContent":["var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * WordPress dependencies\r\n */\r\nimport { store, getContext } from \"@wordpress/interactivity\";\r\n\r\nconst { state } = store(\"favorite-bookmarks-block\", {\r\n  state: {\r\n    allBookmarks: [],\r\n  },\r\n  actions: {\r\n    toggle: () => {\r\n      const context = getContext();\r\n      context.isBookmarked = !context.isBookmarked;\r\n\r\n      // Get all bookmarks from local storage or an empty array.\r\n      let allBookmarks = localStorage.getItem(\"favorite-bookmarks-block\") || \"[]\";\r\n      allBookmarks = JSON.parse(allBookmarks);\r\n\r\n      // Add or remove from our array of bookmarks.\r\n      if (context.isBookmarked && !allBookmarks.includes(context.postId)) {\r\n        allBookmarks.push(context.postId);\r\n      } else if (\r\n        !context.isBookmarked &&\r\n        allBookmarks.includes(context.postId)\r\n      ) {\r\n        const index = allBookmarks.indexOf(context.postId);\r\n        allBookmarks.splice(index, 1);\r\n      }\r\n\r\n      // Save the updated array of bookmarks to local storage.\r\n      localStorage.setItem(\"favorite-bookmarks-block\", JSON.stringify(allBookmarks));\r\n      state.allBookmarks = allBookmarks;\r\n\r\n      // Counting bookmarks.\r\n      let bookmarksCount = state.allBookmarks.length;\r\n      state.bookmarksCount = bookmarksCount;\r\n      console.log('Count ' + bookmarksCount);\r\n\r\n    },\r\n  },\r\n  callbacks: {\r\n    init: () => {\r\n      const context = getContext();\r\n\r\n      // Get all bookmarks from local storage or an empty array.\r\n      let bookmarks = localStorage.getItem(\"favorite-bookmarks-block\") || \"[]\";\r\n      state.allBookmarks = JSON.parse(bookmarks);\r\n\r\n      console.log(\"init\", state.allBookmarks);\r\n\r\n      // Check if the post is already bookmarked and toggle.\r\n      if (context.postId && state.allBookmarks.includes(context.postId)) {\r\n        store(\"favorite-bookmarks-block\").actions.toggle();\r\n      }\r\n    },\r\n    initReadingList: () => {\r\n      // Get all bookmarks from local storage or an empty array.\r\n      let bookmarks = localStorage.getItem(\"favorite-bookmarks-block\") || \"[]\";\r\n      state.allBookmarks = JSON.parse(bookmarks);\r\n\r\n      console.log(\"init\", state.allBookmarks);\r\n\r\n      // Counting bookmarks.\r\n      let bookmarksCount = state.allBookmarks.length;\r\n      state.bookmarksCount = bookmarksCount;\r\n\r\n      console.log('Count ' + bookmarksCount);\r\n      console.log(bookmarks);\r\n\r\n    },\r\n  },\r\n});\r\n"],"names":["store","getContext","state","allBookmarks","actions","toggle","context","isBookmarked","localStorage","getItem","JSON","parse","includes","postId","push","index","indexOf","splice","setItem","stringify","bookmarksCount","length","console","log","callbacks","init","bookmarks","initReadingList"],"sourceRoot":""}